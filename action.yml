name: Install negrutiu/nsis
description: Install [negrutiu/nsis](https://github.com/negrutiu/nsis) on Windows runners.

inputs:
  arch:
    default: x86
    required: false
    description: ^ 
      NSIS architecture to install.
      Both `x86` and `amd64` compilers are able to build both `x86` and `amd64` installers.
      The default is `x86` which will replace the official NSIS installation that is pre-installed on GitHub Windows runners.
    options:
      - 'x86'
      - 'Win32'  # equivalent to x86
      - 'i386'   # equivalent to x86
      - 'i486'   # equivalent to x86
      - 'i586'   # equivalent to x86
      - 'i686'   # equivalent to x86
      - 'amd64'
      - 'x64'    # equivalent to amd64
      - 'x86_64' # equivalent to amd64
      - 'x86-64' # equivalent to amd64

  install-dir:
    default: ''
    required: false
    description: ^
      NSIS custom installation directory.
      The default location is `C:\Program Files (x86)\NSIS` for `x86` and `C:\Program Files\NSIS` for `amd64`.
      If the specified directory is invalid, the installer falls back to the default location.

  register-path:
    default: true
    required: false
    description: ^
      Add NSIS installation directory to PATH environment variable.
      The default is `true`.
    options:
      - true
      - false

outputs:
  instdir:
    description: The installation directory of NSIS
    value: ${{steps.install.outputs.instdir}}
    
  version:
    description: The installed version of NSIS (e.g. "1.2.3.4")
    value: ${{steps.install.outputs.version}}

  arch:
    description: The architecture of NSIS compiler ("x86", "amd64")
    value: ${{steps.install.outputs.arch}}

branding:
  icon: package   # https://feathericons.com
  color: orange
  
runs:
  using: "composite"
  steps:
    - name: Validate Windows OS
      if: runner.os != 'Windows'
      shell: python
      run: |
        raise RuntimeError("This action only supports Windows runners.")

    - name: Install NSIS
      id: install
      shell: python
      run: |
        import os, sys
        sys.path.insert(0, r'${{github.workspace}}')
        from action import *

        # list existing NSIS installations
        for instdir in nsis_list():
          print(f'Found nsis/{pe_architecture(os.path.join(instdir, "makensis.exe"))}/{nsis_version(instdir)} in "{instdir}"')

        # uninstall existing NSIS installations (optional)
        # for instdir in nsis_list(verbose=True):
        #   nsis_uninstall(instdir, unregister_path=(r'${{inputs.register-path}}'.lower() == 'true'))

        # download and install latest negrutiu/nsis
        outdir, outver, outarch = nsis_install(arch=r'${{inputs.arch}}', instdir=r'${{inputs.install-dir}}', tempdir=r'${{github.workspace}}', register_path=(r'${{inputs.register-path}}'.lower() == 'true'))

        # list existing NSIS installations
        for instdir in nsis_list():
          print(f'Found nsis/{pe_architecture(os.path.join(instdir, "makensis.exe"))}/{nsis_version(instdir)} in "{instdir}"')

        # outputs
        with open(os.getenv('GITHUB_OUTPUT'), "a") as fo:
          fo.write(f"instdir={outdir}\n")
          fo.write(f"version={outver}\n")
          fo.write(f"arch={outarch}\n")
